@model List<reviewYourInternship.Models.Company>

@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<body>
    <div id="searchID">
        <h1 id="nameOfWebsite">Review Your Internship</h1>
        <form autocomplete="off">
            <div class="autocomplete container" style="width:300px;">
                <div class="row">
                    <div class="col-9 myInput" style="padding-left: 0px;">
                        <input id="myInput" type="text" name="myCompany" placeholder="Type company name here ...">
                    </div>
                    <div class="col-3">
                        <button id="searchBarButton" type="button" class="btn" onclick="seeCompany()">Search</button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="createCompanyModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Add Your Company!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p id="createCompanyError"></p>
                    <input id="name" type="text" name="myCompany" placeholder="Company Name">
                    <button style="background-color: white; color: #FCBF1E; " type="button" class="btn btn-primary" onclick="createCompany()">Add</button>
                </div>
            </div>
        </div>
    </div>
</body>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script>

        //You need a space so that we can query any word that is in the string
        var companies = [];
        @foreach(var company in Model)
        {
            @:companies.push(" @(company.Name)");
        }

        //the var for seeCompany
        var company = null;
        var foundCompany = false;

        function autocomplete(inp) {
            /*the autocomplete function takes two arguments,
            the text field element and an array of possible autocompleted values:*/
            var currentFocus;
            /*execute a function when someone writes in the text field:*/
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                foundCompany = false;
                company = this.value;
                /*close any already open lists of autocompleted values*/
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                /*create a DIV element that will contain the items (values):*/
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                /*append the DIV element as a child of the autocomplete container:*/
                this.parentNode.appendChild(a);
                /*for each item in the array...*/
                var limit = 0;
                for (i = 0; i < companies.length; i++) {
                /*check if the item contains letters as the text field value:*/
                    if ((companies[i].toUpperCase()).includes(" " + val.toUpperCase())) {
                        /*create a DIV element for each matching element:*/
                        b = document.createElement("DIV");
                        b.innerHTML = companies[i].substr(0, val.length);
                        b.innerHTML += companies[i].substr(val.length);
                        /*insert a input field that will hold the current array item's value:*/
                        b.innerHTML += "<input type='hidden' value='" + companies[i] + "'>";
                        /*execute a function when someone clicks on the item value (DIV element):*/
                        b.addEventListener("click", function (e) {
                            /*insert the value for the autocomplete text field:
                             We used trim because we added whitespace to the beginning
                             for search functionality*/
                            inp.value = this.getElementsByTagName("input")[0].value.trim();

                            /*close the list of autocompleted values,
                            (or any other open lists of autocompleted values:*/
                            closeAllLists();

                            //Set company val to clicked on company

                            company = inp.value;
                            foundCompany = true;
                            return;
                        });
                        //Sets limit on length
                        limit += 1;
                        if (limit > 4) {
                            break;
                        }
                        a.appendChild(b);
                    }
                }

                if (a.childElementCount == 0) {
                    b = document.createElement("DIV");
                    b.innerHTML = "Can't find your company? Click here!";
                    b.addEventListener("click", function () {
                        $("#createCompanyModal").modal();
                    });
                    a.appendChild(b);
                }
            });
            /*execute a function presses a key on the keyboard:*/
            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                    /*If the arrow DOWN key is pressed,
                    increase the currentFocus variable:*/
                    currentFocus++;
                    /*and and make the current item more visible:*/
                    addActive(x);
                } else if (e.keyCode == 38) { //up
                    /*If the arrow UP key is pressed,
                    decrease the currentFocus variable:*/
                    currentFocus--;
                    /*and and make the current item more visible:*/
                    addActive(x);
                } else if (e.keyCode == 13) {
                    /*If the ENTER key is pressed, prevent the form from being submitted,*/
                    e.preventDefault();
                    if (currentFocus > -1) {
                        /*and simulate a click on the "active" item:*/
                        if (x) x[currentFocus].click();
                    }

                    //Call function seeCompany
                    @*seeCompany()*@
                }
            });
            function addActive(x) {
                /*a function to classify an item as "active":*/
                if (!x) return false;
                /*start by removing the "active" class on all items:*/
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                /*add class "autocomplete-active":*/
                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {
                /*a function to remove the "active" class from all autocomplete items:*/
                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                /*close all autocomplete lists in the document,
                except the one passed as an argument:*/
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            /*execute a function when someone clicks in the document:*/
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });

        }
        autocomplete(document.getElementById("myInput"));

        function seeCompany() {

            //In C#, strings need encodeURI because of special characters

            if (foundCompany) {
                var url = '@Url.Action("SpecificCompany", "Home", new { comp = "__company__" })';
                window.location.href = url.replace('__company__', encodeURIComponent(company));
            } else {
                $("#createCompanyModal").modal();
            }
        }


        function createCompany() {
            var d1 = {
                name: $('#name').val()
            }
            $.ajax({
                    type: "POST",
                    url: "@Url.Action("CreateCompany", "Home")",
                    data: (d1),
                success: function (result) {

                    if (result.message == null) {
                        successMessage("Successfully created company!").then(() => {
                            var url = '@Url.Action("SpecificCompany", "Home", new { comp = "__company__" })';
                            window.location.href = url.replace('__company__', encodeURIComponent($('#name').val()));
                        });
                    } else {
                        $('#createCompanyError').text("");
                        var text = document.createTextNode(result.message);
                        $('#createCompanyError').append(text);
                    }

                 },
                 error: function (xhr) {
                     errorMessage("Something went wrong.");
                 }
            })
        }
    </script>
}

